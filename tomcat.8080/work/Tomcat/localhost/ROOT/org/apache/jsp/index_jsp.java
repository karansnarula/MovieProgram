/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2561-04-11 10:47:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.util.*;
import javax.servlet.*;
import javax.servlet.http.*;
import org.apache.commons.fileupload.*;
import org.apache.commons.fileupload.disk.*;
import org.apache.commons.fileupload.servlet.*;
import org.apache.commons.io.output.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


        public static String getfilename(){
                    File folder = new File("C:/Users/Admin/Desktop/MovieProgram/src/main/webapp");
                    File[] listOfFiles = folder.listFiles();
                        for (int i = 0; i < listOfFiles.length; i++) {
                          if (listOfFiles[i].isFile() && listOfFiles[i].getName().equals("index.jsp") == false && listOfFiles[i].getName().equals("moviepic.jpg") == false) {
                                return listOfFiles[i].getName();
                          }
                        }
                        return "";
                    }

        
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("org.apache.commons.fileupload");
    _jspx_imports_packages.add("org.apache.commons.io.output");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("org.apache.commons.fileupload.disk");
    _jspx_imports_packages.add("org.apache.commons.fileupload.servlet");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("      <head>\n");
      out.write("         <meta http-equiv=\"Content-Type\" content=\"text/html; charset=windows-1256\">\n");
      out.write("         <title>Karan Movie Theater</title>\n");
      out.write("      </head>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("        <h1 style=\"display:inline;float:center;\">&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Welcome to Karan's Movie Theater</h1>\n");
      out.write("        <h2 style=\"display:inline;float:right;margin-top: 0.321em;\">");
      out.print( new java.util.Date() );
      out.write("</h2>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("        ");
      out.write("\n");
      out.write("\n");
      out.write("      <body>\n");
      out.write("      <style>\n");
      out.write("      body  {\n");
      out.write("            background-image: url(moviepic.jpg);\n");
      out.write("            background-repeat: no-repeat;\n");
      out.write("            background-attachment: fixed;\n");
      out.write("            background-position: center;\n");
      out.write("      }\n");
      out.write("      h1   {color: white;}\n");
      out.write("      h1   {font-size: 200%;}\n");
      out.write("      h2   {color: white;}\n");
      out.write("      h2   {font-size: 100%;}\n");
      out.write("      h3   {color: white;}\n");
      out.write("      h3   {font-size: 150%;}\n");
      out.write("      h3   {text-align: center;}\n");
      out.write("      </style>\n");
      out.write("        <br><br>\n");
      out.write("        <h3>In Theaters Now: ");
      out.print( getfilename().substring(0,getfilename().length() - 4) );
      out.write("</h3>\n");
      out.write("        <center>\n");
      out.write("        <video width=\"500\" controls>\n");
      out.write("          <source src = ");
      out.print( getfilename() );
      out.write(" type=\"video/mp4\">\n");
      out.write("          <source src = ");
      out.print( getfilename() );
      out.write(" type=\"video/ogg\">\n");
      out.write("          <source src = ");
      out.print( getfilename() );
      out.write(" type=\"video/wav\">\n");
      out.write("          Your browser does not support HTML5 video.\n");
      out.write("        </video>\n");
      out.write("        </center>\n");
      out.write("      <br><br><br><br><br><br>\n");
      out.write("      <center>\n");
      out.write("      <font size=\"5\"><a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfOyboXCKWikTzb9HHNgml3bdL8HrJzychxSPbZlrOP4bEL6Q/viewform?entry.409180267\" target=\"_blank\" style=\"color:#FFFFFF;\">Movie Form</a></font>\n");
      out.write("      </center>\n");
      out.write("      </body>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
